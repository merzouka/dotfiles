#!/bin/bash

wifi_enabled=$(nmcli radio wifi)

if [ "$wifi_enabled" != "enabled" ]; then
    echo '(box :orientation "v" :vexpand true :valign "fill")'
    exit 
fi

in_use=""
ssid=""
signal=""
read_info() {
    read -u $1 -r in_use
    if [[ $? -eq 1 ]]; then
        return 1
    fi
    read -u $1 -r _ 
    read -u $1 -r ssid 
    read -u $1 -r _ 
    read -u $1 -r _ 
    read -u $1 -r _ 
    read -u $1 -r signal 
    read -u $1 -r _ 
    read -u $1 -r _ 
}

icons=("󰢿" "󰢼" "󰢽" "󰢾")
icon () {
    if [[ $1 -le 20 ]]; then
        echo ${icons[0]}
    elif [[ $1 -le 50 ]]; then
        echo ${icons[1]}
    elif [[ $1 -le 80 ]]; then
        echo ${icons[2]}
    else
        echo ${icons[3]}
    fi
}

exec {connections}< <(nmcli -m multiline device wifi | sed -E 's/\s$/-/' | awk -F ': +' '{print $2}')

states=()
ssids=()
indices=()
signals=()
i=0

while read_info $connections; do
    indices+=($i)     
    (( i++ ))
    ssids+=("'$ssid'")
    signals+=($(icon $signal))
    states+=($(if [ "$in_use" == "*" ]; then echo true; else echo false; fi))
done

exec {connections}<&-

config="$HOME/.config/eww/wifi"

eww -c $config update \
    indices="[$(IFS=,; echo "${indices[*]}")]" \
    ssids="[$(IFS=,; echo "${ssids[*]}")]" \
    signals="[$(IFS=,; echo "${signals[*]}")]" \
    states="[$(IFS=,; echo "${states[*]}")]" 
