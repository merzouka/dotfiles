[4mDOCKER[24m(1)                  Docker User Manuals                 [4mDOCKER[24m(1)

[1mNAME[0m
       docker-run - Create and run a new container from an image

[1mSYNOPSIS[0m
       [1mdocker   run   [22m[[1m-a[22m|[1m--attach[22m[=[4m[][24m]]   [[1m--add-host[22m[=[4m[][24m]]  [[1m--annota‚Äê[0m
       [1mtion[22m[=[4m[][24m]] [[1m--blkio-weight[22m[=[4m[BLKIO-WEIGHT][24m]]  [[1m--blkio-weight-de‚Äê[0m
       [1mvice[22m[=[4m[][24m]]    [[1m-c[22m|[1m--cpu-shares[22m[=[4m0[24m]]    [[1m--cap-add[22m[=[4m[][24m]]   [[1m--cap-[0m
       [1mdrop[22m[=[4m[][24m]]   [[1m--cgroupns[22m[=[4m[][24m]]    [[1m--cgroup-parent[22m[=[4mCGROUP-PATH[24m]]
       [[1m--cidfile[22m[=[4mCIDFILE[24m]]    [[1m--cpu-count[22m[=[4m0[24m]]    [[1m--cpu-percent[22m[=[4m0[24m]]
       [[1m--cpu-period[22m[=[4m0[24m]]    [[1m--cpu-quota[22m[=[4m0[24m]]     [[1m--cpu-rt-period[22m[=[4m0[24m]]
       [[1m--cpu-rt-runtime[22m[=[4m0[24m]]   [[1m--cpus[22m[=[4m0.0[24m]]   [[1m--cpuset-cpus[22m[=[4mCPUSET-[0m
       [4mCPUS[24m]]  [[1m--cpuset-mems[22m[=[4mCPUSET-MEMS[24m]]  [[1m-d[22m|[1m--detach[22m]   [[1m--detach-[0m
       [1mkeys[22m[=[4m[][24m]] [[1m--device[22m[=[4m[][24m]] [[1m--device-cgroup-rule[22m[=[4m[][24m]] [[1m--device-[0m
       [1mread-bps[22m[=[4m[][24m]]     [[1m--device-read-iops[22m[=[4m[][24m]]     [[1m--device-write-[0m
       [1mbps[22m[=[4m[][24m]]  [[1m--device-write-iops[22m[=[4m[][24m]]   [[1m--dns[22m[=[4m[][24m]]   [[1m--dns-op‚Äê[0m
       [1mtion[22m[=[4m[][24m]]     [[1m--dns-search[22m[=[4m[][24m]]    [[1m--domainname[22m[=[4mDOMAINNAME[24m]]
       [[1m-e[22m|[1m--env[22m[=[4m[][24m]]   [[1m--entrypoint[22m[=[4mENTRYPOINT[24m]]   [[1m--env-file[22m[=[4m[][24m]]
       [[1m--expose[22m[=[4m[][24m]]   [[1m--group-add[22m[=[4m[][24m]]   [[1m-h[22m|[1m--hostname[22m[=[4mHOSTNAME[24m]]
       [[1m--help[22m]   [[1m--init[22m]   [[1m-i[22m|[1m--interactive[22m]    [[1m--ip[22m[=[4mIPv4-ADDRESS[24m]]
       [[1m--ip6[22m[=[4mIPv6-ADDRESS[24m]]    [[1m--ipc[22m[=[4mIPC[24m]]   [[1m--isolation[22m[=[4mdefault[24m]]
       [[1m--kernel-memory[22m[=[4mKERNEL-MEMORY[24m]]   [[1m-l[22m|[1m--label[22m[=[4m[][24m]]   [[1m--label-[0m
       [1mfile[22m[=[4m[][24m]]   [[1m--link[22m[=[4m[][24m]]   [[1m--link-local-ip[22m[=[4m[][24m]]   [[1m--log-dri‚Äê[0m
       [1mver[22m[=[4m[][24m]]  [[1m--log-opt[22m[=[4m[][24m]]   [[1m-m[22m|[1m--memory[22m[=[4mMEMORY[24m]]   [[1m--mac-ad‚Äê[0m
       [1mdress[22m[=[4mMAC-ADDRESS[24m]]  [[1m--memory-reservation[22m[=[4mMEMORY-RESERVATION[24m]]
       [[1m--memory-swap[22m[=[4mLIMIT[24m]] [[1m--memory-swappiness[22m[=[4mMEMORY-SWAPPINESS[24m]]
       [[1m--mount[22m[=[4m[MOUNT][24m]]    [[1m--name[22m[=[4mNAME[24m]]     [[1m--network-alias[22m[=[4m[][24m]]
       [[1m--network[22m[=[4m"bridge"[24m]] [[1m--oom-kill-disable[22m] [[1m--oom-score-adj[22m[=[4m0[24m]]
       [[1m-P[22m|[1m--publish-all[22m]       [[1m-p[22m|[1m--publish[22m[=[4m[][24m]]      [[1m--pid[22m[=[4m[PID][24m]]
       [[1m--userns[22m[=[4m[][24m]]    [[1m--pids-limit[22m[=[4mPIDS_LIMIT[24m]]     [[1m--privileged[22m]
       [[1m--read-only[22m]  [[1m--restart[22m[=[4mRESTART[24m]] [[1m--rm[22m] [[1m--security-opt[22m[=[4m[][24m]]
       [[1m--storage-opt[22m[=[4m[][24m]]    [[1m--stop-signal[22m[=[4mSIGNAL[24m]]    [[1m--stop-time‚Äê[0m
       [1mout[22m[=[4mTIMEOUT[24m]]       [[1m--shm-size[22m[=[4m[][24m]]       [[1m--sig-proxy[22m[=[4mtrue[24m]]
       [[1m--sysctl[22m[=[4m[][24m]]  [[1m-t[22m|[1m--tty[22m]  [[1m--tmpfs[22m[=[4m[CONTAINER-DIR[:OPTIONS][24m]]
       [[1m-u[22m|[1m--user[22m[=[4mUSER[24m]]    [[1m--ulimit[22m[=[4m[][24m]]   [[1m--uts[22m[=[4m[][24m]]   [[1m-v[22m|[1m--vol‚Äê[0m
       [1mume[22m[=[4m[[HOST-DIR:]CONTAINER-DIR[:OPTIONS]][24m]]        [[1m--volume-dri‚Äê[0m
       [1mver[22m[=[4mDRIVER[24m]]  [[1m--volumes-from[22m[=[4m[][24m]] [[1m-w[22m|[1m--workdir[22m[=[4mWORKDIR[24m]] IM‚Äê
       AGE [COMMAND] [ARG...]

[1mDESCRIPTION[0m
       Run a process in a new container. [1mdocker  run  [22mstarts  a  process
       with  its  own  file system, its own networking, and its own iso‚Äê
       lated process tree. The IMAGE which starts the process may define
       defaults related to the process that will  be  run  in  the  con‚Äê
       tainer,  the networking to expose, and more, but [1mdocker run [22mgives
       final control to the operator or  administrator  who  starts  the
       container from the image. For that reason [1mdocker run [22mhas more op‚Äê
       tions than any other Docker command.

       If  the IMAGE is not already loaded then [1mdocker run [22mwill pull the
       IMAGE, and all image dependencies, from  the  repository  in  the
       same  way  running  [1mdocker  pull [22mIMAGE, before it starts the con‚Äê
       tainer from that image.

[1mOPTIONS[0m
       [1m-a[22m, [1m--attach[22m=[]
          Attach to STDIN, STDOUT or STDERR.

       In foreground mode (the default when [1m-d [22mis not specified), [1mdocker[0m
       [1mrun [22mcan start the process in the container and attach the console
       to the process's standard input, output, and standard  error.  It
       can  even pretend to be a TTY (this is what most commandline exe‚Äê
       cutables expect) and pass along signals. The [1m-a [22moption can be set
       for each of stdin, stdout, and stderr.

       [1m--add-host[22m=[]
          Add a custom host-to-IP mapping (host=ip, or host:ip)

       Add a line to /etc/hosts. The format  is  hostname=ip,  or  host‚Äê
       name:ip.
          The [1m--add-host [22moption can be set multiple times.

       [1m--annotation[22m=[]
          Add  an annotation to the container (passed through to the OCI
       runtime).

       The annotations are provided to the OCI runtime.

       [1m--blkio-weight[22m=[4m0[0m
          Block IO weight (relative weight) accepts a weight  value  be‚Äê
       tween 10 and 1000.

       [1m--blkio-weight-device[22m=[]
          Block   IO   weight   (relative  device  weight,  format:  [1mDE‚Äê[0m
       [1mVICE_NAME:WEIGHT[22m).

       [1m-c[22m, [1m--cpu-shares[22m=[4m0[0m
          CPU shares (relative weight)

       By default, all containers get the same proportion of CPU cycles.
       This proportion can be modified by changing the  container's  CPU
       share  weighting  relative  to the weighting of all other running
       containers.

       To modify the proportion from the default of 1024, use the [1m-c  [22mor
       [1m--cpu-shares [22mflag to set the weighting to 2 or higher.

       The  proportion  will only apply when CPU-intensive processes are
       running.  When tasks in one container are idle, other  containers
       can  use  the  left-over  CPU time. The actual amount of CPU time
       will vary depending on the number of containers  running  on  the
       system.

       For  example,  consider  three containers, one has a cpu-share of
       1024 and two  others  have  a  cpu-share  setting  of  512.  When
       processes in all three containers attempt to use 100% of CPU, the
       first  container  would receive 50% of the total CPU time. If you
       add a fourth container with a cpu-share of 1024, the  first  con‚Äê
       tainer only gets 33% of the CPU. The remaining containers receive
       16.5%, 16.5% and 33% of the CPU.

       On  a  multi-core  system, the shares of CPU time are distributed
       over all CPU cores. Even if a container is limited to  less  than
       100% of CPU time, it can use 100% of each individual CPU core.

       For example, consider a system with more than three cores. If you
       start one container [1m{C0} [22mwith [1m-c=512 [22mrunning one process, and an‚Äê
       other container [1m{C1} [22mwith [1m-c=1024 [22mrunning two processes, this can
       result in the following division of CPU shares:

       PID    container    CPU  CPU share
       100    {C0}         0    100% of CPU0
       101    {C1}         1    100% of CPU1
       102    {C1}         2    100% of CPU2

       [1m--cap-add[22m=[]
          Add Linux capabilities

       [1m--cap-drop[22m=[]
          Drop Linux capabilities

       [1m--cgroupns[22m=""
          Set the cgroup namespace mode for the container.
            [1mhost[22m:    run the container in the host's cgroup namespace
            [1mprivate[22m:  run  the container in its own private cgroup name‚Äê
       space
            [1m""[22m:      (unset)  use  the  daemon's  default  configuration
       ([1mhost [22mon cgroup v1, [1mprivate [22mon cgroup v2)

       [1m--cgroup-parent[22m=""
          Path  to cgroups under which the cgroup for the container will
       be created. If the path is not absolute, the path  is  considered
       to  be  relative to the cgroups path of the init process. Cgroups
       will be created if they do not already exist.

       [1m--cidfile[22m=""
          Write the container ID to the file

       [1m--cpu-count[22m=[4m0[0m
           Limit the number of CPUs available for execution by the  con‚Äê
       tainer.

       On Windows Server containers, this is approximated as a percentage of total CPU usage.

       On Windows Server containers, the processor resource controls are mutually exclusive, the order of precedence is CPUCount first, then CPUShares, and CPUPercent last.

       [1m--cpu-percent[22m=[4m0[0m
           Limit the percentage of CPU available for execution by a con‚Äê
       tainer running on a Windows daemon.

       On Windows Server containers, the processor resource controls are mutually exclusive, the order of precedence is CPUCount first, then CPUShares, and CPUPercent last.

       [1m--cpu-period[22m=[4m0[0m
          Limit the CPU CFS (Completely Fair Scheduler) period

       Limit the container's CPU usage. This flag tell the kernel to re‚Äê
       strict the container's CPU usage to the period you specify.

       [1m--cpuset-cpus[22m=""
          CPUs in which to allow execution (0-3, 0,1)

       [1m--cpuset-mems[22m=""
          Memory  nodes  (MEMs)  in which to allow execution (0-3, 0,1).
       Only effective on NUMA systems.

       If you have four memory nodes on your system (0-3), use [1m--cpuset-[0m
       [1mmems=0,1 [22mthen processes in your Docker container  will  only  use
       memory from the first two memory nodes.

       [1m--cpu-quota[22m=[4m0[0m
          Limit the CPU CFS (Completely Fair Scheduler) quota

       Limit  the container's CPU usage. By default, containers run with
       the full CPU resource. This flag tell the kernel to restrict  the
       container's CPU usage to the quota you specify.

       [1m--cpu-rt-period[22m=0
          Limit the CPU real-time period in microseconds

       Limit  the  container's  Real  Time CPU usage. This flag tell the
       kernel to restrict the container's Real Time CPU usage to the pe‚Äê
       riod you specify.

       [1m--cpu-rt-runtime[22m=0
          Limit the CPU real-time runtime in microseconds

       Limit the containers Real Time CPU usage.  This  flag  tells  the
       kernel  to  limit  the  amount of time in a given CPU period Real
       Time tasks may consume. Ex:
          Period of 1,000,000us and Runtime of 950,000us means that this
       container could consume 95% of available CPU and  leave  the  re‚Äê
       maining 5% to normal priority tasks.

       The  sum  of  all  runtimes  across  containers cannot exceed the
       amount allotted to the parent cgroup.

       [1m--cpus[22m=0.0
          Number of CPUs. The default is [4m0.0[24m which means no limit.

       [1m-d[22m, [1m--detach[22m=[4mtrue[24m|[4mfalse[0m
          Detached mode: run the container in the background  and  print
       the new container ID. The default is [4mfalse[24m.

       At  any  time  you can run [1mdocker ps [22min the other shell to view a
       list of the running containers. You can reattach  to  a  detached
       container with [1mdocker attach[22m.

       When  attached in the tty mode, you can detach from the container
       (and leave it running) using a configurable key sequence. The de‚Äê
       fault sequence is [1mCTRL-p CTRL-q[22m.  You configure the key  sequence
       using the [1m--detach-keys [22moption or a configuration file.  See [1mcon‚Äê[0m
       [1mfig-json(5) [22mfor documentation on using a configuration file.

       [1m--detach-keys[22m=[4mkey[0m
          Override  the key sequence for detaching a container; [4mkey[24m is a
       single character from the [a-Z] range, or [1mctrl[22m-[4mvalue[24m, where [4mvalue[0m
       is one of: [1ma-z[22m, [1m@[22m, [1m^[22m, [1m[[22m, [1m,[22m, or [1m_[22m.

       [1m--device[22m=[4monhost[24m:[4mincontainer[24m[:[4mmode[24m]
          Add a host device [4monhost[24m to the  container  under  the  [4mincon‚Äê[0m
       [4mtainer[24m  name.  Optional [4mmode[24m parameter can be used to specify de‚Äê
       vice permissions, it is a combination of [1mr  [22m(for  read),  [1mw  [22m(for
       write), and [1mm [22m(for [1mmknod[22m(2)).

       For  example,  [1m--device=/dev/sdc:/dev/xvdc:rwm  [22mwill  give a con‚Äê
       tainer all permissions for the  host  device  [1m/dev/sdc[22m,  seen  as
       [1m/dev/xvdc [22minside the container.

       [1m--device-cgroup-rule[22m="[4mtype[24m [4mmajor[24m:[4mminor[24m [4mmode[24m"
          Add a rule to the cgroup allowed devices list. The rule is ex‚Äê
       pected to be in the format specified in the Linux kernel documen‚Äê
       tation (Documentation/cgroup-v1/devices.txt):
            - [4mtype[24m: [1ma [22m(all), [1mc [22m(char), or [1mb [22m(block);
            - [4mmajor[24m and [4mminor[24m: either a number, or [1m* [22mfor all;
            -  [4mmode[24m:  a  composition  of  [1mr  [22m(read),  [1mw  [22m(write),  and [1mm[0m
       ([1mmknod[22m(2)).

       Example: [1m--device-cgroup-rule "c 1:3 mr"[22m: allow for  a  character
       device idendified by [1m1:3  [22mto be created and read.

       [1m--device-read-bps[22m=[]
          Limit   read   rate   from   a   device  (e.g.  --device-read-
       bps=/dev/sda:1mb)

       [1m--device-read-iops[22m=[]
          Limit  read  rate   from   a   device   (e.g.   --device-read-
       iops=/dev/sda:1000)

       [1m--device-write-bps[22m=[]
          Limit   write   rate   to   a   device  (e.g.  --device-write-
       bps=/dev/sda:1mb)

       [1m--device-write-iops[22m=[]
          Limit  write  rate   to   a   device   (e.g.   --device-write-
       iops=/dev/sda:1000)

       [1m--dns-search[22m=[]
          Set custom DNS search domains (Use --dns-search=. if you don't
       wish to set the search domain)

       [1m--dns-option[22m=[]
          Set custom DNS options

       [1m--dns[22m=[]
          Set custom DNS servers

       This  option can be used to override the DNS configuration passed
       to the container. Typically this is necessary when the  host  DNS
       configuration  is  invalid  for  the container (e.g., 127.0.0.1).
       When this is the case the [1m--dns [22mflags is necessary for every run.

       [1m--domainname[22m=""
          Container NIS domain name

       Sets the container's NIS domain name (see also  [1msetdomainname(2)[22m)
       that is
          available inside the container.

       [1m-e[22m, [1m--env[22m=[]
          Set environment variables

       This option allows you to specify arbitrary environment variables
       that  are  available for the process that will be launched inside
       of the container.

       [1m--entrypoint[22m=""
          Overwrite the default ENTRYPOINT of the image

       This option allows you to overwrite the default entrypoint of the
       image that is set in the Dockerfile. The ENTRYPOINT of  an  image
       is  similar  to a COMMAND because it specifies what executable to
       run when the container starts, but it is (purposely) more  diffi‚Äê
       cult  to  override.  The ENTRYPOINT gives a container its default
       nature or behavior, so that when you set an  ENTRYPOINT  you  can
       run  the  container  as if it were that binary, complete with de‚Äê
       fault options, and you can pass in more options via the  COMMAND.
       But,  sometimes an operator may want to run something else inside
       the container, so you can override the default ENTRYPOINT at run‚Äê
       time by using a [1m--entrypoint [22mand a string to specify the new  EN‚Äê
       TRYPOINT.

       [1m--env-file[22m=[]
          Read in a line delimited file of environment variables

       [1m--expose[22m=[]
          Expose  a  port, or a range of ports (e.g. --expose=3300-3310)
       informs Docker that the container listens on the  specified  net‚Äê
       work  ports at runtime. Docker uses this information to intercon‚Äê
       nect containers using links and to set up port redirection on the
       host system.

       [1m--group-add[22m=[]
          Add additional groups to run as

       [1m-h[22m, [1m--hostname[22m=""
          Container host name

       Sets the container host name that is available  inside  the  con‚Äê
       tainer.

       [1m--help[0m
          Print usage statement

       [1m--init[0m
          Run  an  init  inside  the container that forwards signals and
       reaps processes

       [1m-i[22m, [1m--interactive[22m=[4mtrue[24m|[4mfalse[0m
          Keep STDIN open even if not attached. The default is [4mfalse[24m.

       When set to true, keep stdin open even if not attached.

       [1m--ip[22m=""
          Sets the container's interface IPv4 address (e.g., 172.23.0.9)

       It can only be used in conjunction with  [1m--network  [22mfor  user-de‚Äê
       fined networks

       [1m--ip6[22m=""
          Sets   the   container's   interface   IPv6   address   (e.g.,
       2001:db8::1b99)

       It can only be used in conjunction with  [1m--network  [22mfor  user-de‚Äê
       fined networks

       [1m--ipc[22m=""
          Sets  the IPC mode for the container. The following values are
       accepted:

       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
       ‚îÇ [1mValue                [22m‚îÇ [1mDescription                [22m‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ (empty)              ‚îÇ Use daemon's default.      ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mnone                 [22m‚îÇ Own private IPC namespace, ‚îÇ
       ‚îÇ                      ‚îÇ with /dev/shm not mounted. ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mprivate              [22m‚îÇ Own private IPC namespace. ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mshareable            [22m‚îÇ Own private IPC namespace, ‚îÇ
       ‚îÇ                      ‚îÇ with  a   possibility   to ‚îÇ
       ‚îÇ                      ‚îÇ share  it  with other con‚Äê ‚îÇ
       ‚îÇ                      ‚îÇ tainers.                   ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mcontainer:[4m[22mname-or-ID[24m ‚îÇ Join another ("shareable") ‚îÇ
       ‚îÇ                      ‚îÇ container's IPC namespace. ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mhost                 [22m‚îÇ Use the host system's  IPC ‚îÇ
       ‚îÇ                      ‚îÇ namespace.                 ‚îÇ
       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       If  not  specified,  daemon  default is used, which can either be
       [1mprivate [22mor [1mshareable[22m, depending on the daemon version and config‚Äê
       uration.

       [1m--isolation[22m="[4mdefault[24m"
          Isolation specifies the type of isolation technology  used  by
       containers.  Note  that the default on Windows server is [1mprocess[22m,
       and the default on Windows client is [1mhyperv[22m. Linux only  supports
       [1mdefault[22m.

       [1m-l[22m, [1m--label [4m[22mkey[24m=[4mvalue[0m
          Set  metadata on the container (for example, [1m--label com.exam‚Äê[0m
       [1mple.key=value[22m).

       [1m--kernel-memory[22m=[4mnumber[24m[[4mS[24m]
          Kernel memory limit; [4mS[24m is an optional suffix which can be  one
       of [1mb[22m, [1mk[22m, [1mm[22m, or [1mg[22m.

       Constrains the kernel memory available to a container. If a limit
       of  0  is  specified (not using [1m--kernel-memory[22m), the container's
       kernel memory is not limited. If you specify a limit, it  may  be
       rounded  up to a multiple of the operating system's page size and
       the value can be very large, millions of trillions.

       [1m--label-file[22m=[]
          Read in a line delimited file of labels

       [1m--link[22m=[4mname-or-id[24m[:[4malias[24m]
          Add link to another container.

       If the operator uses [1m--link [22mwhen starting  the  new  client  con‚Äê
       tainer, then the client container can access the exposed port via
       a  private networking interface. Docker will set some environment
       variables in the client container to help indicate  which  inter‚Äê
       face and port to use.

       [1m--link-local-ip[22m=[]
          Add  one  or  more  link-local IPv4/IPv6 addresses to the con‚Äê
       tainer's interface

       [1m--log-driver[22m="[4mjson-file[24m|[4msyslog[24m|[4mjournald[24m|[4mgelf[24m|[4mflu‚Äê[0m
       [4mentd[24m|[4mawslogs[24m|[4msplunk[24m|[4metwlogs[24m|[4mgcplogs[24m|[4mnone[24m"
         Logging driver for the container. Default is defined by  daemon
       [1m--log-driver [22mflag.
         [1mWarning[22m:  the  [1mdocker logs [22mcommand works only for the [1mjson-file[0m
       and
         [1mjournald [22mlogging drivers.

       [1m--log-opt[22m=[]
         Logging driver specific options.

       [1m-m[22m, [1m--memory[22m=[4mnumber[24m[*S]
          Memory limit; [4mS[24m is an optional suffix which can be one  of  [1mb[22m,
       [1mk[22m, [1mm[22m, or [1mg[22m.

       Allows  you  to constrain the memory available to a container. If
       the host supports swap memory, then the [1m-m [22mmemory setting can  be
       larger than physical RAM. If a limit of 0 is specified (not using
       [1m-m[22m),  the container's memory is not limited. The actual limit may
       be rounded up to a multiple of the operating system's  page  size
       (the value would be very large, that's millions of trillions).

       [1m--memory-reservation[22m=[4mnumber[24m[*S]
          Memory soft limit; [4mS[24m is an optional suffix which can be one of
       [1mb[22m, [1mk[22m, [1mm[22m, or [1mg[22m.

       After  setting memory reservation, when the system detects memory
       contention or low memory, containers are forced to restrict their
       consumption to their reservation. So you should  always  set  the
       value  below  [1m--memory[22m, otherwise the hard limit will take prece‚Äê
       dence. By default, memory reservation will be the same as  memory
       limit.

       [1m--memory-swap[22m=[4mnumber[24m[[4mS[24m]
          Combined memory plus swap limit; [4mS[24m is an optional suffix which
       can be one of [1mb[22m, [1mk[22m, [1mm[22m, or [1mg[22m.

       This option can only be used together with [1m--memory[22m. The argument
       should  always be larger than that of [1m--memory[22m. Default is double
       the value of [1m--memory[22m. Set to [1m-1 [22mto enable unlimited swap.

       [1m--mac-address[22m=""
          Container MAC address (e.g., [1m92:d0:c6:0a:29:33[22m)

       Remember that the MAC address in  an  Ethernet  network  must  be
       unique.   The  IPv6  link-local  address will be based on the de‚Äê
       vice's MAC address according to RFC4862.

       [1m--mount type=[4m[22mTYPE[24m,[4mTYPE-SPECIFIC-OPTION[24m[,...]
          Attach a filesystem mount to the container

       Current supported mount [1mTYPES [22mare [1mbind[22m, [1mvolume[22m, and [1mtmpfs[22m.

       e.g.

       [1mtype=bind,source=/path/on/host,destination=/path/in/container[0m

       [1mtype=volume,source=my-volume,destination=/path/in/container,vol‚Äê[0m
       [1mume-label="color=red",volume-label="shape=round"[0m

       [1mtype=tmpfs,tmpfs-size=512M,destination=/path/in/container[0m

       Common Options:

              ‚Ä¢ [1msrc[22m, [1msource[22m: mount source  spec  for  [1mbind  [22mand  [1mvolume[22m.
                Mandatory for [1mbind[22m.

              ‚Ä¢ [1mdst[22m, [1mdestination[22m, [1mtarget[22m: mount destination spec.

              ‚Ä¢ [1mro[22m, [1mreadonly[22m: [1mtrue [22mor [1mfalse [22m(default).

       [1mNote[22m:  setting  [1mreadonly  [22mfor  a bind mount may not make its sub‚Äê
       mounts
          read-only depending on the kernel version. See  also  [1mbind-re‚Äê[0m
       [1mcursive[22m.

       Options specific to [1mbind[22m:

              ‚Ä¢ [1mbind-propagation[22m:   [1mshared[22m,   [1mslave[22m,  [1mprivate[22m,  [1mrshared[22m,
                [1mrslave[22m, or [1mrprivate[22m(default). See also [1mmount(2)[22m.

              ‚Ä¢ [1mconsistency[22m: [1mconsistent[22m(default), [1mcached[22m, or  [1mdelegated[22m.
                Currently, only effective for Docker for Mac.

              ‚Ä¢ [1mbind-recursive[22m:  [1menabled  [22m(default), [1mdisabled[22m, [1mwritable[22m,
                or [1mreadonly[22m:
                  If set to [1menabled[22m,  submounts  are  recursively  bind-
                mounted and attempted to be made recursively read-only.
                  If  set  to  [1mdisabled[22m,  submounts  are not recursively
                bind-mounted.
                  If set to [1mwritable[22m, submounts  are  recursively  bind-
                mounted but not made recursively read-only.
                  If  set  to  [1mreadonly[22m, submounts are recursively bind-
                mounted and forcibly made recursively read-only.

              ‚Ä¢ [1mbind-nonrecursive [22m(Deprecated): [1mtrue [22mor [1mfalse [22m(default).
                Setting [1mtrue [22mequates to [1mbind-recursive=disabled[22m.
                 Setting [1mfalse [22mequates to [1mbind-recursive=enabled[22m.

       Options specific to [1mvolume[22m:

              ‚Ä¢ [1mvolume-driver[22m: Name of the volume-driver plugin.

              ‚Ä¢ [1mvolume-label[22m: Custom metadata.

              ‚Ä¢ [1mvolume-nocopy[22m: [1mtrue[22m(default) or [1mfalse[22m. If set to  [1mfalse[22m,
                the  Engine  copies existing files and directories under
                the mount-path into the volume, allowing the host to ac‚Äê
                cess them.

              ‚Ä¢ [1mvolume-opt[22m: specific to a given volume driver.

       Options specific to [1mtmpfs[22m:

              ‚Ä¢ [1mtmpfs-size[22m: Size of the tmpfs mount in bytes.  Unlimited
                by default in Linux.

              ‚Ä¢ [1mtmpfs-mode[22m:  File  mode of the tmpfs in octal. (e.g. [1m700[0m
                or [1m0700[22m.) Defaults to [1m1777 [22min Linux.

       [1m--name[22m=""
          Assign a name to the container

       The operator can identify a container in three ways:

       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
       ‚îÇ [1mIdentifier type       [22m‚îÇ [1mExample value                                                      [22m‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ UUID long identifier  ‚îÇ "f78375b1c487e03c9438c729345e54db9d20cfa2ac1fc3494b6eb60872e74778" ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ UUID short identifier ‚îÇ "f78375b1c487"                                                     ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ Name                  ‚îÇ "evil_ptolemy"                                                     ‚îÇ
       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       The UUID identifiers come from the Docker daemon, and if  a  name
       is not assigned to the container with [1m--name [22mthen the daemon will
       also  generate  a  random  string  name.  The name is useful when
       defining links (see [1m--link[22m) (or any other place you need to iden‚Äê
       tify a container). This works for both background and  foreground
       Docker containers.

       [1m--network[22m=[4mtype[0m
          Set the Network mode for the container. Supported values are:

       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
       ‚îÇ [1mValue                   [22m‚îÇ [1mDescription              [22m‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mnone                    [22m‚îÇ No   networking  in  the ‚îÇ
       ‚îÇ                         ‚îÇ container.               ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mbridge                  [22m‚îÇ Connect the container to ‚îÇ
       ‚îÇ                         ‚îÇ the    default    Docker ‚îÇ
       ‚îÇ                         ‚îÇ bridge  via  veth inter‚Äê ‚îÇ
       ‚îÇ                         ‚îÇ faces.                   ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mhost                    [22m‚îÇ Use the  host's  network ‚îÇ
       ‚îÇ                         ‚îÇ stack  inside  the  con‚Äê ‚îÇ
       ‚îÇ                         ‚îÇ tainer.                  ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mcontainer:[4m[22mname[24m|[4mid[24m       ‚îÇ Use the network stack of ‚îÇ
       ‚îÇ                         ‚îÇ another container, spec‚Äê ‚îÇ
       ‚îÇ                         ‚îÇ ified via  its  [4mname[24m  or ‚îÇ
       ‚îÇ                         ‚îÇ [4mid[24m.                      ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [4mnetwork-name[24m|[4mnetwork-id[24m ‚îÇ Connects  the  container ‚îÇ
       ‚îÇ                         ‚îÇ to a user  created  net‚Äê ‚îÇ
       ‚îÇ                         ‚îÇ work  (using [1mdocker net‚Äê [22m‚îÇ
       ‚îÇ                         ‚îÇ [1mwork create [22mcommand)     ‚îÇ
       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       Default is [1mbridge[22m.

       [1m--network-alias[22m=[]
          Add network-scoped alias for the container

       [1m--oom-kill-disable[22m=[4mtrue[24m|[4mfalse[0m
          Whether to disable OOM Killer for the container or not.

       [1m--oom-score-adj[22m=""
          Tune the host's OOM preferences for containers (accepts  -1000
       to 1000)

       [1m-P[22m, [1m--publish-all[22m=[4mtrue[24m|[4mfalse[0m
          Publish  all  exposed ports to random ports on the host inter‚Äê
       faces. The default is [4mfalse[24m.

       When set to true publish all exposed ports  to  the  host  inter‚Äê
       faces. The default is false. If the operator uses -P (or -p) then
       Docker  will make the exposed port accessible on the host and the
       ports will be available to any client that can  reach  the  host.
       When using -P, Docker will bind any exposed port to a random port
       on   the   host   within  an  [4mephemeral[24m  [4mport[24m  [4mrange[24m  defined  by
       [1m/proc/sys/net/ipv4/ip_local_port_range[22m. To find the  mapping  be‚Äê
       tween the host ports and the exposed ports, use [1mdocker port[22m(1).

       [1m-p[22m, [1m--publish [4m[22mip[24m:[[4mhostPort[24m]:[4mcontainerPort[24m | [[4mhostPort[24m:][4mcontainer‚Äê[0m
       [4mPort[0m
          Publish a container's port, or range of ports, to the host.

       Both  [4mhostPort[24m  and  [4mcontainerPort[24m  can  be specified as a range.
       When specifying ranges for both, the number of  ports  in  ranges
       should be equal.

       Examples:  [1m-p  1234-1236:1222-1224[22m,  [1m-p 127.0.0.1:$HOSTPORT:$CON‚Äê[0m
       [1mTAINERPORT[22m.

       Use [1mdocker port[22m(1) to see the actual mapping,  e.g.  [1mdocker  port[0m
       [1mCONTAINER $CONTAINERPORT[22m.

       [1m--pid[22m=""
          Set the PID mode for the container
          Default is to create a private PID namespace for the container
                                      'container:':  join  another  con‚Äê
       tainer's PID namespace
                                      'host': use the host's  PID  name‚Äê
       space  for the container. Note: the host mode gives the container
       full access to local PID and is therefore considered insecure.

       [1m--userns[22m=""
          Set the usernamespace mode for the container when [1muserns-remap[0m
       option is enabled.
            [1mhost[22m: use the host usernamespace and enable  all  privileged
       options (e.g., [1mpid=host [22mor [1m--privileged[22m).

       [1m--pids-limit[22m=""
          Tune  the  container's  pids (process IDs) limit. Set to [1m-1 [22mto
       have unlimited pids for the container.

       [1m--uts[22m=[4mtype[0m
          Set the UTS mode for the container. The only possible [4mtype[24m  is
       [1mhost[22m,  meaning  to  use  the host's UTS namespace inside the con‚Äê
       tainer.
            Note: the host mode gives the container access  to  changing
       the host's hostname and is therefore considered insecure.

       [1m--privileged [22m[[1mtrue[22m|[1mfalse[22m]
          Give  extended  privileges  to  this container. A "privileged"
       container is given access to all devices.

       When the operator executes [1mdocker run --privileged[22m,  Docker  will
       enable access to all devices on the host as well as set some con‚Äê
       figuration in AppArmor to allow the container nearly all the same
       access to the host as processes running outside of a container on
       the host.

       [1m--read-only[22m=[1mtrue[22m|[1mfalse[0m
          Mount the container's root filesystem as read only.

       By default a container will have its root filesystem writable al‚Äê
       lowing  processes  to  write  files  anywhere.  By specifying the
       [1m--read-only [22mflag the container  will  have  its  root  filesystem
       mounted as read only prohibiting any writes.

       [1m--restart [4m[22mpolicy[0m
          Restart policy to apply when a container exits. Supported val‚Äê
       ues are:

       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
       ‚îÇ [1mPolicy                   [22m‚îÇ [1mResult                   [22m‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mno                       [22m‚îÇ Do   not   automatically ‚îÇ
       ‚îÇ                          ‚îÇ restart  the   container ‚îÇ
       ‚îÇ                          ‚îÇ when it exits.           ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1mon-failure[22m[:[4mmax-retries[24m] ‚îÇ Restart only if the con‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ tainer exits with a non- ‚îÇ
       ‚îÇ                          ‚îÇ zero  exit  status.  Op‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ tionally, limit the num‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ ber of  restart  retries ‚îÇ
       ‚îÇ                          ‚îÇ the  Docker  daemon  at‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ tempts.                  ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1malways                   [22m‚îÇ Always restart the  con‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ tainer regardless of the ‚îÇ
       ‚îÇ                          ‚îÇ exit  status.  When  you ‚îÇ
       ‚îÇ                          ‚îÇ specify   always,    the ‚îÇ
       ‚îÇ                          ‚îÇ Docker  daemon  will try ‚îÇ
       ‚îÇ                          ‚îÇ to restart the container ‚îÇ
       ‚îÇ                          ‚îÇ indefinitely.  The  con‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ tainer  will also always ‚îÇ
       ‚îÇ                          ‚îÇ start on daemon startup, ‚îÇ
       ‚îÇ                          ‚îÇ regardless of  the  cur‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ rent  state  of the con‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ tainer.                  ‚îÇ
       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
       ‚îÇ [1munless-stopped           [22m‚îÇ Always restart the  con‚Äê ‚îÇ
       ‚îÇ                          ‚îÇ tainer regardless of the ‚îÇ
       ‚îÇ                          ‚îÇ exit  status, but do not ‚îÇ
       ‚îÇ                          ‚îÇ start   it   on   daemon ‚îÇ
       ‚îÇ                          ‚îÇ startup if the container ‚îÇ
       ‚îÇ                          ‚îÇ has   been   put   to  a ‚îÇ
       ‚îÇ                          ‚îÇ stopped state before.    ‚îÇ
       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

       Default is [1mno[22m.

       [1m--rm true[22m|[1mfalse[0m
          Automatically remove the container when it exits. The  default
       is [1mfalse[22m.
          [1m--rm  [22mflag can work together with [1m-d[22m, and auto-removal will be
       done on daemon side. Note that it's incompatible with any restart
       policy other than [1mnone[22m.

       [1m--security-opt [4m[22mvalue[24m[,...]
          Security Options for the container. The following options  can
       be given:

       "label=user:USER"   : Set the label user for the container
       "label=role:ROLE"   : Set the label role for the container
       "label=type:TYPE"   : Set the label type for the container
       "label=level:LEVEL" : Set the label level for the container
       "label=disable"     : Turn off label confinement for the container
       "no-new-privileges" : Disable container processes from gaining additional privileges

       "seccomp=unconfined" : Turn off seccomp confinement for the container
       "seccomp=profile.json :  White listed syscalls seccomp Json file to be used as a seccomp filter

       "apparmor=unconfined" : Turn off apparmor confinement for the container
       "apparmor=your-profile" : Set the apparmor confinement profile for the container

       [1m--storage-opt[0m
          Storage driver options per container

       $ docker run -it --storage-opt size=120G fedora /bin/bash

       This  (size)  will allow to set the container rootfs size to 120G
       at creation time.
          This option is only available for the [1mbtrfs[22m, [1moverlay2  [22mand [1mzfs[0m
       graph drivers.
          For the [1mbtrfs [22mand [1mzfs [22mstorage drivers, user cannot pass a size
       less than the Default BaseFS Size.
          For the [1moverlay2 [22mstorage  driver,  the  size  option  is  only
       available  if  the  backing fs is [1mxfs [22mand mounted with the [1mpquota[0m
       mount option.
          Under these conditions, user can pass any size less  than  the
       backing fs size.

       [1m--stop-signal[22m=""
          Signal to stop the container.

       The  [1m--stop-signal  [22mflag sets the system call signal that will be
       sent to the
          container to exit. This signal can be a  signal  name  in  the
       format [1mSIG<NAME>[22m,
          for instance [1mSIGKILL[22m, or an unsigned number that matches a po‚Äê
       sition in the
          kernel's syscall table, for instance [1m9[22m.

       The  default is defined by [1mSTOPSIGNAL [22min the image, or [1mSIGTERM [22mif
       the image
          has no [1mSTOPSIGNAL [22mdefined.

       [1m--stop-timeout[0m
         Timeout (in seconds) to stop a  container,  or  [1m-1  [22mto  disable
       timeout.

       The  [1m--stop-timeout  [22mflag  sets the number of seconds to wait for
       the container
         to stop after sending the pre-defined (see [1m--stop-signal[22m)  sys‚Äê
       tem call signal.
         If the container does not exit after the timeout elapses, it is
       forcibly killed
         with a [1mSIGKILL [22msignal.

       If  [1m--stop-timeout  [22mis  set to [1m-1[22m, no timeout is applied, and the
       daemon will
         wait indefinitely for the container to exit.

       The default is determined by the daemon, and 10 seconds for Linux
       containers,
         and 30 seconds for Windows containers.

       [1m--shm-size[22m=""
          Size of [1m/dev/shm[22m. The format is [1m<number><unit>[22m.
          [1mnumber [22mmust be greater than [1m0[22m.  Unit is optional and can be  [1mb[0m
       (bytes), [1mk [22m(kilobytes), [1mm[22m(megabytes), or [1mg [22m(gigabytes).
          If  you  omit the unit, the system uses bytes. If you omit the
       size entirely, the system uses [1m64m[22m.

       [1m--sysctl[22m=SYSCTL
         Configure namespaced kernel parameters at runtime

       IPC Namespace - current sysctls allowed:

       kernel.msgmax,  kernel.msgmnb,  kernel.msgmni,  kernel.sem,  ker‚Äê
       nel.shmall, kernel.shmmax, kernel.shmmni, kernel.shm_rmid_forced
         Sysctls beginning with fs.mqueue.*

       If  you  use  the [1m--ipc=host [22moption these sysctls will not be al‚Äê
       lowed.

       Network Namespace - current sysctls allowed:
             Sysctls beginning with net.*

       If you use the [1m--network=host [22moption these sysctls  will  not  be
       allowed.

       [1m--sig-proxy[22m=[4mtrue[24m|[4mfalse[0m
          Proxy  received  signals  to  the process (non-TTY mode only).
       SIGCHLD, SIGSTOP, and SIGKILL are not  proxied.  The  default  is
       [4mtrue[24m.

       [1m--memory-swappiness[22m=""
          Tune  a container's memory swappiness behavior. Accepts an in‚Äê
       teger between 0 and 100.

       [1m-t[22m, [1m--tty[22m=[4mtrue[24m|[4mfalse[0m
          Allocate a pseudo-TTY. The default is [4mfalse[24m.

       When set to true Docker can allocate a pseudo-tty and  attach  to
       the  standard input of any container. This can be used, for exam‚Äê
       ple, to run a throwaway interactive shell. The default is false.

       The [1m-t [22moption is incompatible with a redirection  of  the  docker
       client standard input.

       [1m--tmpfs[22m=[] Create a tmpfs mount

       Mount  a temporary filesystem ([1mtmpfs[22m) mount into a container, for
       example:

       $ docker run -d --tmpfs /tmp:rw,size=787448k,mode=1777 my_image

       This command mounts a [1mtmpfs [22mat [1m/tmp [22mwithin  the  container.   The
       supported  mount  options are the same as the Linux default [1mmount[0m
       flags. If you do not specify any options, the  systems  uses  the
       following options: [1mrw,noexec,nosuid,nodev,size=65536k[22m.

       See also [1m--mount[22m, which is the successor of [1m--tmpfs [22mand [1m--volume[22m.
          Even  though  there  is no plan to deprecate [1m--tmpfs[22m, usage of
       [1m--mount [22mis recommended.

       [1m-u[22m, [1m--user[22m=""
          Sets the username or UID used and optionally the groupname  or
       GID for the specified command.

       The followings examples are all valid:
          --user  [user  |  user:group  |  uid  |  uid:gid  | user:gid |
       uid:group ]

       Without this argument the command will be run as root in the con‚Äê
       tainer.

       [1m--ulimit[22m=[]
           Ulimit options

       [1m-v[22m|[1m--volume[22m[=[4m[[HOST-DIR:]CONTAINER-DIR[:OPTIONS]][24m]
          Create a bind mount. If you specify, [1m-v  /HOST-DIR:/CONTAINER-[0m
       [1mDIR[22m, Docker
          bind  mounts  [1m/HOST-DIR  [22min  the host to [1m/CONTAINER-DIR [22min the
       Docker
          container. If 'HOST-DIR'  is  omitted,   Docker  automatically
       creates the new
          volume  on  the  host.  The [1mOPTIONS [22mare a comma delimited list
       and can be:

              ‚Ä¢ [rw|ro]

              ‚Ä¢ [z|Z]

              ‚Ä¢ [[1m[r]shared[22m|[1m[r]slave[22m|[1m[r]private[22m]

              ‚Ä¢ [[1mdelegated[22m|[1mcached[22m|[1mconsistent[22m]

              ‚Ä¢ [nocopy]

       The [1mCONTAINER-DIR [22mmust be an absolute path such as [1m/src/docs[22m. The
       [1mHOST-DIR [22mcan be an absolute path or a [1mname [22mvalue.  A  [1mname  [22mvalue
       must  start with an alphanumeric character, followed by [1ma-z0-9[22m, [1m_[0m
       (underscore), [1m. [22m(period) or [1m- [22m(hyphen). An absolute  path  starts
       with a [1m/ [22m(forward slash).

       If  you supply a [1mHOST-DIR [22mthat is an absolute path,  Docker bind-
       mounts to the path you specify. If you supply a [1mname[22m, Docker cre‚Äê
       ates a named volume by that [1mname[22m. For example,  you  can  specify
       either  [1m/foo  [22mor [1mfoo [22mfor a [1mHOST-DIR [22mvalue. If you supply the [1m/foo[0m
       value, Docker creates a bind mount. If you supply the [1mfoo  [22mspeci‚Äê
       fication, Docker creates a named volume.

       You  can specify multiple  [1m-v [22moptions to mount one or more mounts
       to a container. To use these same  mounts  in  other  containers,
       specify the [1m--volumes-from [22moption also.

       You  can  supply additional options for each bind mount following
       an additional colon.  A [1m:ro [22mor [1m:rw  [22msuffix  mounts  a  volume  in
       read-only  or  read-write mode, respectively. By default, volumes
       are mounted in read-write mode.  You can also specify the consis‚Äê
       tency requirement for the  mount,  either  [1m:consistent  [22m(the  de‚Äê
       fault),  [1m:cached[22m,  or [1m:delegated[22m.  Multiple options are separated
       by commas, e.g. [1m:ro,cached[22m.

       Labeling systems like SELinux  require  that  proper  labels  are
       placed  on volume content mounted into a container. Without a la‚Äê
       bel, the security system might prevent the processes running  in‚Äê
       side  the  container  from  using the content. By default, Docker
       does not change the labels set by the OS.

       To change a label in the container context, you can add either of
       two suffixes [1m:z [22mor [1m:Z [22mto the volume mount.  These  suffixes  tell
       Docker  to  relabel file objects on the shared volumes. The [1mz [22mop‚Äê
       tion tells Docker that two containers share the  volume  content.
       As  a result, Docker labels the content with a shared content la‚Äê
       bel. Shared volume labels allow all containers to read/write con‚Äê
       tent.  The [1mZ [22moption tells Docker to label the content with a pri‚Äê
       vate unshared label.  Only the current container can use  a  pri‚Äê
       vate volume.

       By  default  bind  mounted  volumes  are  [1mprivate[22m. That means any
       mounts done inside container will not be visible on host and vice
       versa. One can change this behavior by specifying a volume  mount
       propagation  property.  Making  a volume [1mshared [22mmounts done under
       that volume inside container will be visible  on  host  and  vice
       versa.  Making a volume [1mslave [22menables only one way mount propaga‚Äê
       tion and that is mounts done on host under that  volume  will  be
       visible inside container but not the other way around.

       To  control  mount  propagation  property  of  volume one can use
       [1m:[r]shared[22m, [1m:[r]slave [22mor [1m:[r]private [22mpropagation  flag.  Propaga‚Äê
       tion  property can be specified only for bind mounted volumes and
       not for internal volumes or named volumes. For mount  propagation
       to  work  source  mount  point  (mount  point where source dir is
       mounted on) has to have right propagation properties. For  shared
       volumes,  source mount point has to be shared. And for slave vol‚Äê
       umes, source mount has to be either shared or slave.

       Use [1mdf <source-dir> [22mto figure out the source mount and  then  use
       [1mfindmnt  -o  TARGET,PROPAGATION  <source-mount-dir> [22mto figure out
       propagation properties of source mount. If [1mfindmnt [22mutility is not
       available, then one can look at  mount  entry  for  source  mount
       point in [1m/proc/self/mountinfo[22m. Look at [1moptional fields [22mand see if
       any  propagation  properties are specified.  [1mshared:X [22mmeans mount
       is [1mshared[22m, [1mmaster:X [22mmeans mount is [1mslave [22mand if nothing is  there
       that means mount is [1mprivate[22m.

       To  change propagation properties of a mount point use [1mmount [22mcom‚Äê
       mand. For example, if one wants to bind  mount  source  directory
       [1m/foo  [22mone  can do [1mmount --bind /foo /foo [22mand [1mmount --make-private[0m
       [1m--make-shared /foo[22m. This will convert /foo into  a  [1mshared  [22mmount
       point.  Alternatively one can directly change propagation proper‚Äê
       ties of source mount. Say [1m/ [22mis source mount for  [1m/foo[22m,  then  use
       [1mmount --make-shared / [22mto convert [1m/ [22minto a [1mshared [22mmount.

              [1mNote[22m:  When  using  systemd  to manage the Docker daemon's
              start and stop, in the systemd unit file there is  an  op‚Äê
              tion  to  control  mount propagation for the Docker daemon
              itself, called [1mMountFlags[22m. The value of this  setting  may
              cause  Docker to not see mount propagation changes made on
              the mount point. For example, if this value is [1mslave[22m,  you
              may  not  be able to use the [1mshared [22mor [1mrshared [22mpropagation
              on a volume.

       To disable automatic copying of data from the container  path  to
       the  volume,  use  the [1mnocopy [22mflag. The [1mnocopy [22mflag can be set on
       bind mounts and named volumes.

       See also [1m--mount[22m, which is the successor of [1m--tmpfs [22mand [1m--volume[22m.
       Even though there is no plan  to  deprecate  [1m--volume[22m,  usage  of
       [1m--mount [22mis recommended.

       [1m--volume-driver[22m=""
          Container's  volume driver. This driver creates volumes speci‚Äê
       fied either from
          a Dockerfile's [1mVOLUME [22minstruction or from the  [1mdocker  run  -v[0m
       flag.
          See [1mdocker-volume-create(1) [22mfor full details.

       [1m--volumes-from[22m=[]
          Mount volumes from the specified container(s)

       Mounts  already  mounted volumes from a source container onto an‚Äê
       other
          container. You must supply the source's container-id. To share
          a volume, use the [1m--volumes-from [22moption when running
          the target container. You can share volumes even if the source
       container
          is not running.

       By default, Docker mounts the volumes in  the  same  mode  (read-
       write or
          read-only)  as  it is mounted in the source container. Option‚Äê
       ally, you
          can change this by suffixing the container-id with either  the
       [1m:ro [22mor
          [1m:rw [22mkeyword.

       If  the location of the volume from the source container overlaps
       with
          data residing on a target container, then the volume hides
          that data on the target.

       [1m-w[22m, [1m--workdir[22m=""
          Working directory inside the container

       The default working directory for running binaries within a  con‚Äê
       tainer is the root directory (/). The developer can set a differ‚Äê
       ent default with the Dockerfile WORKDIR instruction. The operator
       can override the working directory by using the [1m-w [22moption.

[1mExit Status[0m
       The  exit  code  from  [1mdocker run [22mgives information about why the
       container failed to run or why it exited.  When [1mdocker run  [22mexits
       with  a non-zero code, the exit codes follow the [1mchroot [22mstandard,
       see below:

       [4m125[24m [4mif[24m [4mthe[24m [4merror[24m [4mis[24m [4mwith[24m [4mDocker[24m [4mdaemon[24m [4mitself[0m

       $ docker run --foo busybox; echo $?
       # flag provided but not defined: --foo
         See 'docker run --help'.
         125

       [4m126[24m [4mif[24m [4mthe[24m [4mcontained[24m [4mcommand[24m [4mcannot[24m [4mbe[24m [4minvoked[0m

       $ docker run busybox /etc; echo $?
       # exec: "/etc": permission denied
         docker: Error response from daemon: Contained command could not be invoked
         126

       [4m127[24m [4mif[24m [4mthe[24m [4mcontained[24m [4mcommand[24m [4mcannot[24m [4mbe[24m [4mfound[0m

       $ docker run busybox foo; echo $?
       # exec: "foo": executable file not found in $PATH
         docker: Error response from daemon: Contained command not found or does not exist
         127

       [4mExit[24m [4mcode[24m [4mof[24m [4mcontained[24m [4mcommand[24m [4motherwise[0m

       $ docker run busybox /bin/sh -c 'exit 3'
       # 3

[1mEXAMPLES[0m
[1mRunning container in read-only mode[0m
       During container image  development,  containers  often  need  to
       write  to  the image content.  Installing packages into /usr, for
       example.  In production, applications seldom need to write to the
       image.  Container applications write to volumes if they  need  to
       write  to file systems at all.  Applications can be made more se‚Äê
       cure by running them in  read-only  mode  using  the  --read-only
       switch.   This  protects  the containers image from modification.
       Read only containers may still need to write temporary data.  The
       best way to handle this is to mount tmpfs directories on /run and
       /tmp.

       # docker run --read-only --tmpfs /run --tmpfs /tmp -i -t fedora /bin/bash

[1mExposing log messages from the container to the host's log[0m
       If you want messages that are logged in your container to show up
       in the host's syslog/journal  then  you  should  bind  mount  the
       /dev/log directory as follows.

       # docker run -v /dev/log:/dev/log -i -t fedora /bin/bash

       From  inside the container you can test this by sending a message
       to the log.

       (bash)# logger "Hello from my container"

       Then exit and check the journal.

       # exit

       # journalctl -b | grep Hello

       This should list the message sent to logger.

[1mAttaching to one or more from STDIN, STDOUT, STDERR[0m
       If you do not specify  -a  then  Docker  will  attach  everything
       (stdin,stdout,stderr)  .  You  can  specify to which of the three
       standard streams (stdin, stdout, stderr) you'd  like  to  connect
       instead, as in:

       # docker run -a stdin -a stdout -i -t fedora /bin/bash

[1mSharing IPC between containers[0m
       Using            shm_server.c           available           here:
       https://www.cs.cf.ac.uk/Dave/C/node27.html

       Testing [1m--ipc=host [22mmode:

       Host shows a shared memory segment with 7 pids attached,  happens
       to be from httpd:

        $ sudo ipcs -m

        ------ Shared Memory Segments --------
        key        shmid      owner      perms      bytes      nattch     status
        0x01128e25 0          root       600        1000       7

       Now  run  a  regular container, and it correctly does NOT see the
       shared memory segment from the host:

        $ docker run -it shm ipcs -m

        ------ Shared Memory Segments --------
        key        shmid      owner      perms      bytes      nattch     status

       Run a container with the new [1m--ipc=host [22moption, and it  now  sees
       the shared memory segment from the host httpd:

        $ docker run -it --ipc=host shm ipcs -m

        ------ Shared Memory Segments --------
        key        shmid      owner      perms      bytes      nattch     status
        0x01128e25 0          root       600        1000       7

       Testing [1m--ipc=container:CONTAINERID [22mmode:

       Start  a  container with a program to create a shared memory seg‚Äê
       ment:

        $ docker run -it shm bash
        $ sudo shm/shm_server &
        $ sudo ipcs -m

        ------ Shared Memory Segments --------
        key        shmid      owner      perms      bytes      nattch     status
        0x0000162e 0          root       666        27         1

       Create a 2nd container correctly shows no shared  memory  segment
       from 1st container:

        $ docker run shm ipcs -m

        ------ Shared Memory Segments --------
        key        shmid      owner      perms      bytes      nattch     status

       Create  a 3rd container using the new --ipc=container:CONTAINERID
       option, now it shows the shared memory segment from the first:

        $ docker run -it --ipc=container:ed735b2264ac shm ipcs -m
        $ sudo ipcs -m

        ------ Shared Memory Segments --------
        key        shmid      owner      perms      bytes      nattch     status
        0x0000162e 0          root       666        27         1

[1mLinking Containers[0m
              [1mNote[22m: This section describes linking between containers on
              the  default  (bridge)  network,  also  known  as  "legacy
              links".  Using  [1m--link  [22mon  user-defined networks uses the
              DNS-based  discovery,  which  does  not  add  entries   to
              [1m/etc/hosts[22m,  and  does  not  set environment variables for
              discovery.

       The link feature allows multiple containers to  communicate  with
       each other. For example, a container whose Dockerfile has exposed
       port 80 can be run and named as follows:

       # docker run --name=link-test -d -i -t fedora/httpd

       A  second  container, in this case called linker, can communicate
       with the httpd container, named link-test, by  running  with  the
       [1m--link=:[0m

       # docker run -t -i --link=link-test:lt --name=linker fedora /bin/bash

       Now  the  container  linker is linked to container link-test with
       the alias lt.  Running the [1menv [22mcommand in  the  linker  container
       shows environment variables
        with the LT (alias) context ([1mLT_[22m)

       # env
       HOSTNAME=668231cb0978
       TERM=xterm
       LT_PORT_80_TCP=tcp://172.17.0.3:80
       LT_PORT_80_TCP_PORT=80
       LT_PORT_80_TCP_PROTO=tcp
       LT_PORT=tcp://172.17.0.3:80
       PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
       PWD=/
       LT_NAME=/linker/lt
       SHLVL=1
       HOME=/
       LT_PORT_80_TCP_ADDR=172.17.0.3
       _=/usr/bin/env

       When  linking two containers Docker will use the exposed ports of
       the container to create a secure tunnel for the parent to access.

       If a container is connected to the  default  bridge  network  and
       [1mlinked  [22mwith  other  containers,  then the container's [1m/etc/hosts[0m
       file is updated with the linked container's name.

              [1mNote  [22mSince  Docker  may  live  update   the   container's
              [1m/etc/hosts  [22mfile,  there  may be situations when processes
              inside the container can end up reading an empty or incom‚Äê
              plete [1m/etc/hosts [22mfile. In most cases,  retrying  the  read
              again should fix the problem.

[1mMapping Ports for External Usage[0m
       The  exposed  port of an application can be mapped to a host port
       using the [1m-p [22mflag. For example, an httpd port 80 can be mapped to
       the host port 8080 using the following:

       # docker run -p 8080:80 -d -i -t fedora/httpd

[1mCreating and Mounting a Data Volume Container[0m
       Many applications require the sharing of persistent  data  across
       several  containers.  Docker  allows  you to create a Data Volume
       Container that other containers can mount from. For example, cre‚Äê
       ate a named container that contains directories /var/volume1  and
       /tmp/volume2. The image will need to contain these directories so
       a  couple of RUN mkdir instructions might be required for you fe‚Äê
       dora-data image:

       # docker run --name=data -v /var/volume1 -v /tmp/volume2 -i -t fedora-data true
       # docker run --volumes-from=data --name=fedora-container1 -i -t fedora bash

       Multiple --volumes-from parameters will bring  together  multiple
       data volumes from multiple containers. And it's possible to mount
       the volumes that came from the DATA container in yet another con‚Äê
       tainer via the fedora-container1 intermediary container, allowing
       to abstract the actual data source from users of that data:

       # docker run --volumes-from=fedora-container1 --name=fedora-container2 -i -t fedora bash

[1mMounting External Volumes[0m
       To  mount a host directory as a container volume, specify the ab‚Äê
       solute path to the directory and the absolute path for  the  con‚Äê
       tainer directory separated by a colon:

       # docker run -v /var/db:/data1 -i -t fedora bash

       When  using  SELinux,  be aware that the host has no knowledge of
       container SELinux policy. Therefore, in  the  above  example,  if
       SELinux policy is enforced, the [1m/var/db [22mdirectory is not writable
       to the container. A "Permission Denied" message will occur and an
       avc: message in the host's syslog.

       To  work  around this, at time of writing this man page, the fol‚Äê
       lowing command needs to be run in order for  the  proper  SELinux
       policy type label to be attached to the host directory:

       # chcon -Rt svirt_sandbox_file_t /var/db

       Now,  writing  to  the /data1 volume in the container will be al‚Äê
       lowed and the changes will also  be  reflected  on  the  host  in
       /var/db.

[1mUsing alternative security labeling[0m
       You  can  override the default labeling scheme for each container
       by specifying the [1m--security-opt [22mflag. For example, you can spec‚Äê
       ify the MCS/MLS level, a requirement for MLS systems.  Specifying
       the  level  in the following command allows you to share the same
       content between containers.

       # docker run --security-opt label=level:s0:c100,c200 -i -t fedora bash

       An MLS example might be:

       # docker run --security-opt label=level:TopSecret -i -t rhel7 bash

       To disable the security labeling for this container  versus  run‚Äê
       ning with the [1m--permissive [22mflag, use the following command:

       # docker run --security-opt label=disable -i -t fedora bash

       If  you  want a tighter security policy on the processes within a
       container, you can specify an alternate type for  the  container.
       You  could  run  a  container  that  is only allowed to listen on
       Apache ports by executing the following command:

       # docker run --security-opt label=type:svirt_apache_t -i -t centos bash

       Note:

       You would have to write policy defining a [1msvirt_apache_t [22mtype.

[1mSetting device weight[0m
       If you want to set [1m/dev/sda [22mdevice weight to [1m200[22m, you can specify
       the device weight by [1m--blkio-weight-device [22mflag. Use the  follow‚Äê
       ing command:

       # docker run -it --blkio-weight-device "/dev/sda:200" ubuntu

[1mSpecify isolation technology for container (--isolation)[0m
       This  option is useful in situations where you are running Docker
       containers on Microsoft Windows. The [1m--isolation  <value>  [22moption
       sets  a container's isolation technology. On Linux, the only sup‚Äê
       ported is the [1mdefault [22moption which uses Linux  namespaces.  These
       two commands are equivalent on Linux:

       $ docker run -d busybox top
       $ docker run -d --isolation default busybox top

       On Microsoft Windows, can take any of these values:

              ‚Ä¢ [1mdefault[22m:  Use the value specified by the Docker daemon's
                [1m--exec-opt [22m. If the [1mdaemon [22mdoes not specify an isolation
                technology, Microsoft Windows uses [1mprocess  [22mas  its  de‚Äê
                fault value.

              ‚Ä¢ [1mprocess[22m: Namespace isolation only.

              ‚Ä¢ [1mhyperv[22m: Hyper-V hypervisor partition-based isolation.

       In  practice,  when running on Microsoft Windows without a [1mdaemon[0m
       option set,  these two commands are equivalent:

       $ docker run -d --isolation default busybox top
       $ docker run -d --isolation process busybox top

       If you have set the [1m--exec-opt  isolation=hyperv  [22moption  on  the
       Docker [1mdaemon[22m, any of these commands also result in [1mhyperv [22misola‚Äê
       tion:

       $ docker run -d --isolation default busybox top
       $ docker run -d --isolation hyperv busybox top

[1mSetting Namespaced Kernel Parameters (Sysctls)[0m
       The  [1m--sysctl  [22msets namespaced kernel parameters (sysctls) in the
       container. For example, to turn on IP forwarding in the  contain‚Äê
       ers network namespace, run this command:

       $ docker run --sysctl net.ipv4.ip_forward=1 someimage

       Note:

       Not  all sysctls are namespaced. Docker does not support changing
       sysctls inside of a container that also modify the  host  system.
       As  the kernel evolves we expect to see more sysctls become name‚Äê
       spaced.

       See the definition of the [1m--sysctl [22moption above for  the  current
       list of supported sysctls.

[1mHISTORY[0m
       April  2014, Originally compiled by William Henry (whenry at red‚Äê
       hat dot com) based on docker.com  source  material  and  internal
       work.     June    2014,    updated   by   Sven   Dowideit   Sven‚Äê
       Dowideit@home.org.au ‚ü®mailto:SvenDowideit@home.org.au‚ü© July 2014,
       updated by Sven Dowideit  SvenDowideit@home.org.au  ‚ü®mailto:Sven‚Äê
       Dowideit@home.org.au‚ü©  November  2015,  updated by Sally O'Malley
       somalley@redhat.com ‚ü®mailto:somalley@redhat.com‚ü©

Docker Community                JUNE 2014                      [4mDOCKER[24m(1)
