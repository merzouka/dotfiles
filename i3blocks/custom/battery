#!/usr/bin/env python3
#
# Copyright (C) 2016 James Murphy
# Licensed under the GPL version 2 only
#
# A battery indicator blocklet script for i3blocks

from subprocess import check_output
import os
import re

config = dict(os.environ)
status = check_output(['acpi'], universal_newlines=True)

if not status:
    # stands for no battery found
    color = config.get("color_10", "red")
    fulltext = "<span color='{}'><span font='FontAwesome'>\uf00d \uf240</span></span>".format(color)
    percentleft = 100
else:
    # if there is more than one battery in one laptop, the percentage left is
    # available for each battery separately, although state and remaining
    # time for overall block is shown in the status of the first battery
    batteries = status.split("\n")
    state_batteries=[]
    commasplitstatus_batteries=[]
    percentleft_batteries=[]
    time = ""
    for battery in batteries:
        if battery!='':
            state_batteries.append(battery.split(": ")[1].split(", ")[0])
            commasplitstatus = battery.split(", ")
            if not time:
                time = commasplitstatus[-1].strip()
                # check if it matches a time
                time = re.match(r"(\d+):(\d+)", time)
                if time:
                    time = ":".join(time.groups())
                    timeleft = " ({})".format(time)
                else:
                    timeleft = ""

            p = int(commasplitstatus[1].rstrip("%\n"))
            if p>0:
                percentleft_batteries.append(p)
            commasplitstatus_batteries.append(commasplitstatus)
    state = state_batteries[0]
    commasplitstatus = commasplitstatus_batteries[0]
    if percentleft_batteries:
        percentleft = int(sum(percentleft_batteries)/len(percentleft_batteries))
    else:
        percentleft = 0

    def icon(percent):
        if percent < 5:
            return "󰂎"
        if percent < 10:
            return "󰁺"
        if percent < 20:
            return "󰁻"
        if percent < 30:
            return "󰁼"
        if percent < 40:
            return "󰁽"
        if percent < 50:
            return "󰁾"
        if percent < 60:
            return "󰁿"
        if percent < 70:
            return "󰂀"
        if percent < 80:
            return "󰂁"
        if percent < 90:
            return "󰂂"
        return "󰁹"

    def color(percent):
        if percent < 10:
            return config.get("color_10", "#FF0000")
        if percent <= 20:
            return config.get("color_20", "#FF3300")
        return "#FFFFFF"
    fulltext = ""
    if (state != "Charging"):
        form =  '<span color="{}">{}</span>'
        fulltext = form.format(color(percentleft), icon(percentleft))
    else:
        fulltext = "<span color='#43aa8b'></span>"

print(f"{fulltext} {percentleft}%")
